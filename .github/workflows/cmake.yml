name: CMake

on:
  push:
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  id-token: write

jobs:
  cmake_preset:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    strategy:
      fail-fast: false
      matrix:
        include:
          - preset: gh-ubuntu-22.04-llvm14-debug
            os: ubuntu-22.04
          - preset: gh-ubuntu-22.04-llvm15-debug
            os: ubuntu-22.04
          - preset: ci-x64-freebsd-debug
            os: FreeBSD13
    
    name: ${{ matrix.preset }}
    runs-on: ${{ matrix.os }}
    steps:
    - name: Prepare ubuntu-22.04
      if: ${{ matrix.os == 'ubuntu-22.04' }}
      run: echo "needed?"
    
    - name: Prepare FreeBSD13
      if: ${{ matrix.os == 'FreeBSD13' }}
      run: |
        pkg install -y bash cmake curl git ninja pkgconf zip unzip
        pkg install -y autoconf autoconf-archive gmake

    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    
    - name: Configure CMake
      run: cmake --preset ${{ matrix.preset }}

    - name: Build
      run: cmake --build --preset ${{ matrix.preset }}
    
    - name: Run Tests
      env: 
        ASAN_OPTIONS: "detect_leaks=0"
      run: ctest --preset ${{ matrix.preset }}

    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure() # always run even if the previous step fails
      with:
        check_name: "Test Report for ${{ matrix.preset }}"
        annotate_notice: true
        detailed_summary: true
        include_passed: true
        report_paths: build/ctest-${{matrix.preset}}.junit.xml

    - name: Publish Artifacts
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: ${{ matrix.preset }}
        path: |
          build/ctest-${{matrix.preset}}.junit.xml
          build/**/coverage/**/*
